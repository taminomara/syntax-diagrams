name: Test package
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - closed

jobs:
  # Runs main tests for the package.
  #
  # Runs on all events except when closing a pull request.
  test:
    name: Test package
    if: ${{ !(github.event_name == 'pull_request' && github.event.action == 'closed') }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.12"
          - "3.13"
        type:
          - test
        include:
          - os: ubuntu-latest
            python-version: "3.13"
            type: code style
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install --upgrade pip
      # Tests
      - name: Install image diff dependencies
        if: ${{ matrix.type == 'test' }}
        run: sudo apt-get install libcairo2-dev libjpeg-dev libgif-dev
      - name: Install test dependencies
        if: ${{ matrix.type == 'test' }}
        run: python -m pip install '.[test]'
      - name: Check types
        if: ${{ matrix.type == 'test' }}
        run: pyright
      - name: Test package
        if: ${{ matrix.type == 'test' }}
        run: pytest -vv --showlocals --tb=short --color=yes --junit-xml=test-results.xml
      # Lint
      - name: Install lint dependencies
        if: ${{ matrix.type == 'code style' }}
        run: python -m pip install '.[lint]'
      - name: Check code style
        if: ${{ matrix.type == 'code style' }}
        run: pre-commit run -a

  # Builds and publishes python packages.
  #
  # Only runs on tag pushes.
  publish_to_pypi:
    name: Publish package to PyPi
    needs:
      - test
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/syntax-diagrams
    permissions:
      id-token: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install build
        run: |
          pip install build
      - name: Build project
        run: |
          python3 -m build .
      - name: Publish to test pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          attestations: false
      - name: Publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: false

  # Builds sphinx documentation.
  #
  # Runs on all events except when closing a pull request.
  build_docs:
    name: Build docs
    needs:
      - test
    if: ${{ !(github.event_name == 'pull_request' && github.event.action == 'closed') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[doc]'
      - name: Build docs
        env:
          SPHINXOPTS: "-j auto"
        run: |
          cd docs
          make html
      - name: Set up node 22
        uses: actions/setup-node@v5
        with:
          node-version: 22
      - name: Install dependencies for the try page
        run: |
          cd docs/try
          npm install
      - name: Build the try page
        run: |
          cd docs/try
          npm run build
      - name: Copy the try page to the docs root
        run:
          cp -r docs/try/dist docs/build/html/try
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: html_output
          path: docs/build/html
          include-hidden-files: true

  # Builds and publishes production docs.
  #
  # Only runs on tag pushes.
  publish_docs:
    name: Publish docs to GitHub Pages
    needs:
      - build_docs
    # if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && !contains(github.event.ref, '.dev') }}
    if: ${{ github.event_name == 'push' }}
    concurrency:
      group: publish-docs-${{ github.ref }}
      cancel-in-progress: true
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: html_output
          path: docs/build/html
      - name: Publish HTML
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/build/html
          target-folder: .
          clean-exclude: pr-preview
          single-commit: false
